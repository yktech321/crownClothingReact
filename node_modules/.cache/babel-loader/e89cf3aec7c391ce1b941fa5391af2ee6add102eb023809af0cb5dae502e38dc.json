{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => {\n      this.setState(() => {\n        return {\n          monsters: users\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          console.log({\n            startingArray: this.state.monsters\n          });\n          const searchString = event.target.value.toLowerCase();\n          const filteredMonster = this.state.monsters.filter(monster => {\n            return monster.name.toLowerCase().includes(searchString);\n          });\n          this.setState(() => {\n            return {\n              monsters: filteredMonster\n            };\n          }, () => {\n            console.log({\n              endingArray: this.state.monsters\n            });\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n/**\n * what we noticed is that our starting array is 1 that is our starting \n * array is the same as our filtered list \n * that's why we are not getting our monsters infact we have it now stored \n * no where anymore  that list is gone \n * \n * if u're going to modify any kind of data into your state  \n * now if you want to go back to the original list \n * then u need tp keep ur state equal to original list of whatever u're keeping track of \n * for us it's users \n * \n * so we don't want to modify the \n *  \n */","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","console","log","render","className","children","type","placeholder","onChange","event","startingArray","searchString","target","value","toLowerCase","filteredMonster","filter","monster","name","includes","endingArray","fileName","_jsxFileName","lineNumber","columnNumber","map","id"],"sources":["/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState(\n          () => {\n            return { monsters: users };\n          },\n          () => {\n            console.log(this.state);\n          }\n        );\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input\n          className=\"search-box\"\n          type=\"search\"\n          placeholder=\"search monsters\"\n          onChange={(event) => {\n            console.log({ startingArray: this.state.monsters });\n            const searchString = event.target.value.toLowerCase();\n            const filteredMonster = this.state.monsters.filter((monster) => {\n              return monster.name.toLowerCase().includes(searchString);\n            });\n            this.setState(\n              () => {\n                return { monsters: filteredMonster };\n              },\n              () => { \n                console.log({ endingArray: this.state.monsters });\n              }\n            );\n          }}\n        />\n        {this.state.monsters.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default App;\n\n/**\n * what we noticed is that our starting array is 1 that is our starting \n * array is the same as our filtered list \n * that's why we are not getting our monsters infact we have it now stored \n * no where anymore  that list is gone \n * \n * if u're going to modify any kind of data into your state  \n * now if you want to go back to the original list \n * then u need tp keep ur state equal to original list of whatever u're keeping track of \n * for us it's users \n * \n * so we don't want to modify the \n *  \n */"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK;MACf,IAAI,CAACC,QAAQ,CACX,MAAM;QACJ,OAAO;UAAEP,QAAQ,EAAEM;QAAM,CAAC;MAC5B,CAAC,EACD,MAAM;QACJE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAAC;MACzB,CACF,CAAC;IACH,CAAC,CAAC;EACN;EAEAW,MAAMA,CAAA,EAAG;IACP,oBACEd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBhB,OAAA;QACEe,SAAS,EAAC,YAAY;QACtBE,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ,EAAGC,KAAK,IAAK;UACnBR,OAAO,CAACC,GAAG,CAAC;YAAEQ,aAAa,EAAE,IAAI,CAAClB,KAAK,CAACC;UAAS,CAAC,CAAC;UACnD,MAAMkB,YAAY,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;UACrD,MAAMC,eAAe,GAAG,IAAI,CAACvB,KAAK,CAACC,QAAQ,CAACuB,MAAM,CAAEC,OAAO,IAAK;YAC9D,OAAOA,OAAO,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACR,YAAY,CAAC;UAC1D,CAAC,CAAC;UACF,IAAI,CAACX,QAAQ,CACX,MAAM;YACJ,OAAO;cAAEP,QAAQ,EAAEsB;YAAgB,CAAC;UACtC,CAAC,EACD,MAAM;YACJd,OAAO,CAACC,GAAG,CAAC;cAAEkB,WAAW,EAAE,IAAI,CAAC5B,KAAK,CAACC;YAAS,CAAC,CAAC;UACnD,CACF,CAAC;QACH;MAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACD,IAAI,CAAChC,KAAK,CAACC,QAAQ,CAACgC,GAAG,CAAER,OAAO,IAAK;QACpC,oBACE5B,OAAA;UAAAgB,QAAA,eACEhB,OAAA;YAAAgB,QAAA,EAAKY,OAAO,CAACC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GADfP,OAAO,CAACS,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AACA,eAAelC,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
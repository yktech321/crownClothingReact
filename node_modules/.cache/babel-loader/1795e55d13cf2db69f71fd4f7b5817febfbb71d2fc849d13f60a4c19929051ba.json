{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCVtDlpII6iqUuxRvo99YOaXE69kl6tftQ\",\n  authDomain: \"crwn-clothing-db-cfc37.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-cfc37\",\n  storageBucket: \"crwn-clothing-db-cfc37.appspot.com\",\n  messagingSenderId: \"672329233959\",\n  appId: \"1:672329233959:web:a1be4a9dddeabb263fc002\"\n};\nconst app = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n/**\n * for firestore database \n */\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  /**\n   * doc takes three arguments\n   *  database (db)\n   *  collection (users)\n   *  some unique identifier ('NikeAirMax' kind of)\n   *    so over here in the user object which we get after logging in using google\n   *    we get inside it a uid that is unique\n   */\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  /**\n   * now here we don't have a dicument reference inside \n   * our database we also don't have a users collection\n   * but google will still generate this object for me \n   * \n   * as google says though their is no reference in the db\n   * but still i will point to a unique id if their is nothing on \n   * it then too it's fine  \n   */\n\n  /**\n   * now that we have this \n   * how to actually go in and check if \n   * their is some data inside of our document\n   * using this we are going to determine that \n   * if their is data in the document give it to me \n   * else create one place for me  \n   */\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","signInWithRedirect","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists"],"sources":["/home/purvi/Desktop/react/react-code3/monster-rolodex/src/components/utils/firebase/firebase.utils.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {\n  getAuth,\n  signInWithPopup,\n  signInWithRedirect,\n  GoogleAuthProvider\n} from 'firebase/auth';\n\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCVtDlpII6iqUuxRvo99YOaXE69kl6tftQ\",\n    authDomain: \"crwn-clothing-db-cfc37.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-cfc37\",\n    storageBucket: \"crwn-clothing-db-cfc37.appspot.com\",\n    messagingSenderId: \"672329233959\",\n    appId: \"1:672329233959:web:a1be4a9dddeabb263fc002\"\n};\n  \nconst app = initializeApp(firebaseConfig); \n\nconst provider = new GoogleAuthProvider;\nprovider.setCustomParameters({\n    prompt: \"select_account\"\n})\n\nexport const auth = getAuth();\n\nexport const signInWithGooglePopup = () => signInWithPopup(auth,provider)\n\n/**\n * for firestore database \n */\nexport const db= getFirestore();\n\nexport const createUserDocumentFromAuth = async(userAuth) => {\n  /**\n   * doc takes three arguments\n   *  database (db)\n   *  collection (users)\n   *  some unique identifier ('NikeAirMax' kind of)\n   *    so over here in the user object which we get after logging in using google\n   *    we get inside it a uid that is unique\n   */\n  const userDocRef = doc(db, 'users',userAuth.uid);\n  console.log(userDocRef);\n  /**\n   * now here we don't have a dicument reference inside \n   * our database we also don't have a users collection\n   * but google will still generate this object for me \n   * \n   * as google says though their is no reference in the db\n   * but still i will point to a unique id if their is nothing on \n   * it then too it's fine  \n   */\n\n  /**\n   * now that we have this \n   * how to actually go in and check if \n   * their is some data inside of our document\n   * using this we are going to determine that \n   * if their is data in the document give it to me \n   * else create one place for me  \n   */\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n}\n\n"],"mappings":"AAAA,SAAQA,aAAa,QAAO,cAAc;AAC1C,SACEC,OAAO,EACPC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,QACb,eAAe;AAEtB,SACEC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,QACD,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,GAAG,GAAGhB,aAAa,CAACS,cAAc,CAAC;AAEzC,MAAMQ,QAAQ,GAAG,IAAIb,kBAAkB,CAAD,CAAC;AACvCa,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGnB,OAAO,CAAC,CAAC;AAE7B,OAAO,MAAMoB,qBAAqB,GAAGA,CAAA,KAAMnB,eAAe,CAACkB,IAAI,EAACH,QAAQ,CAAC;;AAEzE;AACA;AACA;AACA,OAAO,MAAMK,EAAE,GAAEjB,YAAY,CAAC,CAAC;AAE/B,OAAO,MAAMkB,0BAA0B,GAAG,MAAMC,QAAQ,IAAK;EAC3D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAACE,QAAQ,CAACE,GAAG,CAAC;EAChDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EACzBF,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,CAAC,CAAC,CAAC;AAEpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, signInWithRedirect, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCVtDlpII6iqUuxRvo99YOaXE69kl6tftQ\",\n  authDomain: \"crwn-clothing-db-cfc37.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-cfc37\",\n  storageBucket: \"crwn-clothing-db-cfc37.appspot.com\",\n  messagingSenderId: \"672329233959\",\n  appId: \"1:672329233959:web:a1be4a9dddeabb263fc002\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      /**\n       * our method iherits from the userAuth\n       * the displayName, email and createdAt\n       * now the user may not have put in the display name \n       * in that case we want some additional information it's kinda object\n       */\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","signInWithRedirect","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password"],"sources":["/home/purvi/Desktop/react/react-code3/monster-rolodex/src/components/utils/firebase/firebase.utils.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {\n  getAuth,\n  signInWithPopup,\n  signInWithRedirect,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword\n} from 'firebase/auth';\n\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCVtDlpII6iqUuxRvo99YOaXE69kl6tftQ\",\n    authDomain: \"crwn-clothing-db-cfc37.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-cfc37\",\n    storageBucket: \"crwn-clothing-db-cfc37.appspot.com\",\n    messagingSenderId: \"672329233959\",\n    appId: \"1:672329233959:web:a1be4a9dddeabb263fc002\"\n};\n  \nconst firebaseApp = initializeApp(firebaseConfig); \n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n    prompt: \"select_account\"\n})\n\nexport const auth = getAuth();\n\nexport const signInWithGooglePopup = () => signInWithPopup(auth,provider)\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth,provider)\nexport const db= getFirestore();\n\nexport const createUserDocumentFromAuth = async(\n  userAuth, \n  additionalInformation= {}\n  ) => {\n  const userDocRef = doc(db, 'users',userAuth.uid);\n\n  console.log(userDocRef);\n\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n  \n  if(!userSnapshot.exists()){\n    const {displayName,email} = userAuth;\n    const createdAt = new Date();\n  \n    try{\n      /**\n       * our method iherits from the userAuth\n       * the displayName, email and createdAt\n       * now the user may not have put in the display name \n       * in that case we want some additional information it's kinda object\n       */\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch(error){\n      console.log('error creating the user',error.message);\n    }\n  }\n  \n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n"],"mappings":"AAAA,SAAQA,aAAa,QAAO,cAAc;AAC1C,SACEC,OAAO,EACPC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,8BAA8B,QACzB,eAAe;AAEtB,SACEC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,QACD,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAc,CAAC;AAEjD,MAAMQ,QAAQ,GAAG,IAAId,kBAAkB,CAAC,CAAC;AACzCc,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,CAAC,CAAC;AAE7B,OAAO,MAAMqB,qBAAqB,GAAGA,CAAA,KAAMpB,eAAe,CAACmB,IAAI,EAACH,QAAQ,CAAC;AACzE,OAAO,MAAMK,wBAAwB,GAAGA,CAAA,KAAMpB,kBAAkB,CAACkB,IAAI,EAACH,QAAQ,CAAC;AAC/E,OAAO,MAAMM,EAAE,GAAElB,YAAY,CAAC,CAAC;AAE/B,OAAO,MAAMmB,0BAA0B,GAAG,eAAAA,CACxCC,QAAQ,EAEH;EAAA,IADLC,qBAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAE,CAAC,CAAC;EAEzB,MAAMG,UAAU,GAAGxB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAACE,QAAQ,CAACM,GAAG,CAAC;EAEhDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,YAAY,GAAG,MAAM3B,MAAM,CAACuB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EACzBF,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,CAAC,CAAC,CAAC;EAElC,IAAG,CAACD,YAAY,CAACC,MAAM,CAAC,CAAC,EAAC;IACxB,MAAM;MAACC,WAAW;MAACC;IAAK,CAAC,GAAGZ,QAAQ;IACpC,MAAMa,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAG;MACD;AACN;AACA;AACA;AACA;AACA;MACM,MAAM/B,MAAM,CAACsB,UAAU,EAAE;QACvBM,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGZ;MACL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAMc,KAAK,EAAC;MACZR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACO,KAAK,CAACC,OAAO,CAAC;IACtD;EACF;EAEA,OAAOX,UAAU;AACnB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,MAAAA,CAAOL,KAAK,EAAEM,QAAQ,KAAK;EAC3E,IAAI,CAACN,KAAK,IAAI,CAACM,QAAQ,EAAE;EAEzB,OAAO,MAAMvC,8BAA8B,CAACgB,IAAI,EAAEiB,KAAK,EAAEM,QAAQ,CAAC;AACpE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
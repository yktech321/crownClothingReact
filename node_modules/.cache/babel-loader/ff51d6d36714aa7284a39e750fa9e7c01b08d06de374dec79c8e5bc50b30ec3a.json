{"ast":null,"code":"// this will contain the utilities only of firebase that's why we made it js and not jsx\n\n/**\n * So Firebase, as I mentioned, is a suite of tools.\nFirestore is one of the tools inside.\nso this suite brought down from the library is called app. This captures all of the things \nrequired to get Firebase running, including it's internal services.\nSo in order for you to get it, you need the initialize app function.\n\n* Now this initialize app function creates an app instance for you based on some type of config, \nwhich is an object that allow us to attach this Firebase app instance to that instance that \nwe have online, because right now we have the library installed, but there's no way of us \nto tell Firebase, that this instance that we're using should be referring to the one that we \nhave created inside of Firebase Console online.\n */\nimport { initializeApp } from 'firebase/app';\n\n/**now go in the firebase site and inside the code icon register ur web app and get the\n * config\n */\n/************************************************* */\n/**after initializing our App we need to \n * import from the auth library \n */\nimport { getAuth, signInWithPopup, signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCVtDlpII6iqUuxRvo99YOaXE69kl6tftQ\",\n  authDomain: \"crwn-clothing-db-cfc37.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-cfc37\",\n  storageBucket: \"crwn-clothing-db-cfc37.appspot.com\",\n  messagingSenderId: \"672329233959\",\n  appId: \"1:672329233959:web:a1be4a9dddeabb263fc002\"\n};\n\n/* \nWhat this config does is it identifies this SDK{app} below, which is essentially a developer \nkit that we're using.\nSo the library itself, this library is just some JavaScript library that abstracts away some \nof the functionality that we need to use in order to interact with our instance\n\n\nalso my own config allows me to perform all the crud operations on the firebase instance\ni created online \n\nthe projectId above is the id of my own project online \n*/\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n//You end up passing this to the Initialize app function that we get from Firebase app as \n//imported above.\n\n/************************************************* */\n\n/**\n * so in order to use the google authentication we need to \n * first create the provider instance which we get from GoogleAuthProvider \n * \n * this provider allows us to use the features of the auth and allow us to \n * define that how the authentication must work like when to do when how to do it and all\n */\n\nconst provider = new GoogleAuthProvider();\n\n/**==+\n * GoogleAuthProvider is a class within firebase authentication while \n * below if u see we are passing in this provider into signInWithPopup\n * now we can have different providers for different purposes that's why we \n * create a new provider instance from GoogleAuthProvider\n */\n\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n  // this over here is to say everytime someone interacts with the provider ask them to select account \n});\n\n/**==+\n * Now here the thing is different than googleAuthProvider\n * we don't have to create new instance here \n * because the authentication process and service remain the same throughout the applications\n *u won't need multiple authentication for one application throughout it's lifecycle \n * but their can be multiple providers\n */\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n/**\n * now for leveraging this in order to actually use it we need to go to our app in the firebase\n * and select the sign-in method as google \n * \n */","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","signInWithRedirect","GoogleAuthProvider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","provider","setCustomParameters","prompt","auth","signInWithGooglePopup"],"sources":["/home/purvi/Desktop/react/react-code3/monster-rolodex/src/components/utils/firebase/firebase.utils.js"],"sourcesContent":["// this will contain the utilities only of firebase that's why we made it js and not jsx\n\n/**\n * So Firebase, as I mentioned, is a suite of tools.\nFirestore is one of the tools inside.\nso this suite brought down from the library is called app. This captures all of the things \nrequired to get Firebase running, including it's internal services.\nSo in order for you to get it, you need the initialize app function.\n\n* Now this initialize app function creates an app instance for you based on some type of config, \nwhich is an object that allow us to attach this Firebase app instance to that instance that \nwe have online, because right now we have the library installed, but there's no way of us \nto tell Firebase, that this instance that we're using should be referring to the one that we \nhave created inside of Firebase Console online.\n */\nimport {initializeApp} from 'firebase/app';\n\n/**now go in the firebase site and inside the code icon register ur web app and get the\n * config\n */\n/************************************************* */\n/**after initializing our App we need to \n * import from the auth library \n */\nimport {\n    getAuth,\n    signInWithPopup,\n    signInWithRedirect,\n    GoogleAuthProvider\n} from 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCVtDlpII6iqUuxRvo99YOaXE69kl6tftQ\",\n    authDomain: \"crwn-clothing-db-cfc37.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-cfc37\",\n    storageBucket: \"crwn-clothing-db-cfc37.appspot.com\",\n    messagingSenderId: \"672329233959\",\n    appId: \"1:672329233959:web:a1be4a9dddeabb263fc002\"\n  };\n\n/* \nWhat this config does is it identifies this SDK{app} below, which is essentially a developer \nkit that we're using.\nSo the library itself, this library is just some JavaScript library that abstracts away some \nof the functionality that we need to use in order to interact with our instance\n\n\nalso my own config allows me to perform all the crud operations on the firebase instance\ni created online \n\nthe projectId above is the id of my own project online \n*/\n  \n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig); \n  //You end up passing this to the Initialize app function that we get from Firebase app as \n  //imported above.\n\n/************************************************* */\n\n/**\n * so in order to use the google authentication we need to \n * first create the provider instance which we get from GoogleAuthProvider \n * \n * this provider allows us to use the features of the auth and allow us to \n * define that how the authentication must work like when to do when how to do it and all\n */\n\nconst provider = new GoogleAuthProvider;\n\n/**==+\n * GoogleAuthProvider is a class within firebase authentication while \n * below if u see we are passing in this provider into signInWithPopup\n * now we can have different providers for different purposes that's why we \n * create a new provider instance from GoogleAuthProvider\n */\n\nprovider.setCustomParameters({\n    prompt: \"select_account\"\n    // this over here is to say everytime someone interacts with the provider ask them to select account \n})\n\n/**==+\n * Now here the thing is different than googleAuthProvider\n * we don't have to create new instance here \n * because the authentication process and service remain the same throughout the applications\n *u won't need multiple authentication for one application throughout it's lifecycle \n * but their can be multiple providers\n */\nexport const auth = getAuth();\n\nexport const signInWithGooglePopup = () => signInWithPopup(auth,provider)\n\n/**\n * now for leveraging this in order to actually use it we need to go to our app in the firebase\n * and select the sign-in method as google \n * \n */"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,aAAa,QAAO,cAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIC,OAAO,EACPC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,QACf,eAAe;;AAEtB;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACA,MAAMC,GAAG,GAAGZ,aAAa,CAACK,cAAc,CAAC;AACzC;AACA;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMQ,QAAQ,GAAG,IAAIT,kBAAkB,CAAD,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEAS,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAE;EACR;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGf,OAAO,CAAC,CAAC;AAE7B,OAAO,MAAMgB,qBAAqB,GAAGA,CAAA,KAAMf,eAAe,CAACc,IAAI,EAACH,QAAQ,CAAC;;AAEzE;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
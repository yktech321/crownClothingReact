{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code3/monster-rolodex/src/components/routes/navigation/navigation.component.jsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useContext } from \"react\";\nimport { Outlet, Link } from 'react-router-dom';\nimport { ReactComponent as CrwnLogo } from \"../../../assets/crown.svg\";\nimport './navigation.styles.scss';\nimport { UserContext } from '../../../context/user.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navigation = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  console.log(currentUser);\n  /**\n   * why this component ran?\n   * since we logged in that means our functional component was re-rendered\n   * as the value inside hook useContext tells whenever \n   * the value inside this context updates we re-render\n   * \n   * \n   * 137\n  00:10:17,360 --> 00:10:23,870\n  ‫So what's happening here is that because we're leveraging this current user value, we are saying,\n  138\n  00:10:23,870 --> 00:10:31,880\n  ‫Oh, I want you to run my functional component again and re render me because this value inside of the\n  139\n  00:10:31,880 --> 00:10:33,760\n  ‫user context has updated.\n  140\n  00:10:33,770 --> 00:10:40,340\n  ‫And the reason why this triggers is because of you state being called with the setter function.\n  141\n  00:10:40,580 --> 00:10:48,440\n  ‫So as we remember, a component re renders whenever it's state updates or whenever it's props changes.\n  142\n  00:10:48,440 --> 00:10:55,400\n  ‫Here you can imagine that this used state value setter function was called this current user value updates.\n  143\n  00:10:55,400 --> 00:11:04,100\n  ‫That means that any component that is listening for current user should in turn update, meaning that\n  144\n  00:11:04,100 --> 00:11:06,500\n  ‫it should re render which our current user does.\n  145\n  00:11:06,500 --> 00:11:12,560\n  ‫Because if the current user value updates, we most likely will want to update our X because there's\n  146\n  00:11:12,560 --> 00:11:15,710\n  ‫a chance we're using it as part of our UI.\n  147\n  00:11:15,830 --> 00:11:18,650\n  ‫So this is how context works.\n  148\n  00:11:18,650 --> 00:11:25,670\n  ‫It seems complicated, but really all it is is that this context is just a glorified component that\n  149\n  00:11:25,670 --> 00:11:28,010\n  ‫is really just leveraging you state.\n  150\n  00:11:28,010 --> 00:11:35,240\n  ‫And all we're doing is exposing the value as well as the center of this use state value externally.\n  151\n  00:11:35,390 --> 00:11:40,970\n  ‫Whatever values that you want a component to be able to expose, you can also expose through our context,\n  152\n  00:11:40,970 --> 00:11:43,220\n  ‫which we will see later throughout the course.\n  153\n  00:11:43,220 --> 00:11:50,090\n  ‫But really this is all that's happening here is that we created some parent level component at the very\n  154\n  00:11:50,090 --> 00:11:55,400\n  ‫top of our app that gives us access to some component inside.\n  155\n  00:11:55,480 --> 00:11:56,650\n  ‫Use state value.\n  156\n  00:11:56,860 --> 00:12:04,360\n  ‫Then inside of our respective places, we're either getting and using the setter or we're getting and\n  157\n  00:12:04,360 --> 00:12:06,310\n  ‫using the actual value.\n  158\n  00:12:06,640 --> 00:12:08,530\n  ‫This is use context.\n  159\n  00:12:08,950 --> 00:12:12,870\n  ‫So in the next video, what we're going to do is we're going to talk about some of the nuances with\n  160\n  00:12:12,910 --> 00:12:17,650\n  ‫use context in our model of understanding re renders with components.\n    */\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"logo-containert\",\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(CrwnLogo, {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link\",\n          to: \"/shop\",\n          children: \"SHOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link\",\n          to: \"/auth\",\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(Navigation, \"T/0NbE5fCPzJ+82MNh+lO012Fso=\");\n_c = Navigation;\nexport default Navigation;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["Fragment","useContext","Outlet","Link","ReactComponent","CrwnLogo","UserContext","jsxDEV","_jsxDEV","Navigation","_s","currentUser","console","log","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/purvi/Desktop/react/react-code3/monster-rolodex/src/components/routes/navigation/navigation.component.jsx"],"sourcesContent":["\nimport { Fragment,useContext } from \"react\";\nimport {Outlet, Link} from 'react-router-dom';\nimport {ReactComponent as CrwnLogo} from \"../../../assets/crown.svg\"\nimport './navigation.styles.scss'\nimport {UserContext} from '../../../context/user.context'\nconst Navigation = () =>{\n    const {currentUser} = useContext(UserContext);\n    console.log(currentUser);\n    /**\n     * why this component ran?\n     * since we logged in that means our functional component was re-rendered\n     * as the value inside hook useContext tells whenever \n     * the value inside this context updates we re-render\n     * \n     * \n     * 137\n00:10:17,360 --> 00:10:23,870\n‫So what's happening here is that because we're leveraging this current user value, we are saying,\n\n138\n00:10:23,870 --> 00:10:31,880\n‫Oh, I want you to run my functional component again and re render me because this value inside of the\n\n139\n00:10:31,880 --> 00:10:33,760\n‫user context has updated.\n\n140\n00:10:33,770 --> 00:10:40,340\n‫And the reason why this triggers is because of you state being called with the setter function.\n\n141\n00:10:40,580 --> 00:10:48,440\n‫So as we remember, a component re renders whenever it's state updates or whenever it's props changes.\n\n142\n00:10:48,440 --> 00:10:55,400\n‫Here you can imagine that this used state value setter function was called this current user value updates.\n\n143\n00:10:55,400 --> 00:11:04,100\n‫That means that any component that is listening for current user should in turn update, meaning that\n\n144\n00:11:04,100 --> 00:11:06,500\n‫it should re render which our current user does.\n\n145\n00:11:06,500 --> 00:11:12,560\n‫Because if the current user value updates, we most likely will want to update our X because there's\n\n146\n00:11:12,560 --> 00:11:15,710\n‫a chance we're using it as part of our UI.\n\n147\n00:11:15,830 --> 00:11:18,650\n‫So this is how context works.\n\n148\n00:11:18,650 --> 00:11:25,670\n‫It seems complicated, but really all it is is that this context is just a glorified component that\n\n149\n00:11:25,670 --> 00:11:28,010\n‫is really just leveraging you state.\n\n150\n00:11:28,010 --> 00:11:35,240\n‫And all we're doing is exposing the value as well as the center of this use state value externally.\n\n151\n00:11:35,390 --> 00:11:40,970\n‫Whatever values that you want a component to be able to expose, you can also expose through our context,\n\n152\n00:11:40,970 --> 00:11:43,220\n‫which we will see later throughout the course.\n\n153\n00:11:43,220 --> 00:11:50,090\n‫But really this is all that's happening here is that we created some parent level component at the very\n\n154\n00:11:50,090 --> 00:11:55,400\n‫top of our app that gives us access to some component inside.\n\n155\n00:11:55,480 --> 00:11:56,650\n‫Use state value.\n\n156\n00:11:56,860 --> 00:12:04,360\n‫Then inside of our respective places, we're either getting and using the setter or we're getting and\n\n157\n00:12:04,360 --> 00:12:06,310\n‫using the actual value.\n\n158\n00:12:06,640 --> 00:12:08,530\n‫This is use context.\n\n159\n00:12:08,950 --> 00:12:12,870\n‫So in the next video, what we're going to do is we're going to talk about some of the nuances with\n\n160\n00:12:12,910 --> 00:12:17,650\n‫use context in our model of understanding re renders with components.\n\n     */\n    return(\n        <Fragment>\n            <div className='navigation'>\n                <Link className= 'logo-containert' to='/'>\n                    <CrwnLogo className='logo'/>\n                </Link>\n            <div className='nav-links-container'>\n                <Link className= 'nav-link' to='/shop'>\n                    SHOP\n                </Link>\n                <Link className= 'nav-link' to='/auth'>\n                    SIGN IN\n                </Link>\n            </div>\n            </div>\n            <Outlet/>\n        </Fragment>\n    )\n}\n\nexport default Navigation;"],"mappings":";;AACA,SAASA,QAAQ,EAACC,UAAU,QAAQ,OAAO;AAC3C,SAAQC,MAAM,EAAEC,IAAI,QAAO,kBAAkB;AAC7C,SAAQC,cAAc,IAAIC,QAAQ,QAAO,2BAA2B;AACpE,OAAO,0BAA0B;AACjC,SAAQC,WAAW,QAAO,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzD,MAAMC,UAAU,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAW,CAAC,GAAGV,UAAU,CAACK,WAAW,CAAC;EAC7CM,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EACxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAyBI,oBACIH,OAAA,CAACR,QAAQ;IAAAc,QAAA,gBACLN,OAAA;MAAKO,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBN,OAAA,CAACL,IAAI;QAACY,SAAS,EAAE,iBAAiB;QAACC,EAAE,EAAC,GAAG;QAAAF,QAAA,eACrCN,OAAA,CAACH,QAAQ;UAACU,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACXZ,OAAA;QAAKO,SAAS,EAAC,qBAAqB;QAAAD,QAAA,gBAChCN,OAAA,CAACL,IAAI;UAACY,SAAS,EAAE,UAAU;UAACC,EAAE,EAAC,OAAO;UAAAF,QAAA,EAAC;QAEvC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPZ,OAAA,CAACL,IAAI;UAACY,SAAS,EAAE,UAAU;UAACC,EAAE,EAAC,OAAO;UAAAF,QAAA,EAAC;QAEvC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNZ,OAAA,CAACN,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEnB,CAAC;AAAAV,EAAA,CA7HKD,UAAU;AAAAY,EAAA,GAAVZ,UAAU;AA+HhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
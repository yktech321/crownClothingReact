{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code3/monster-rolodex/src/context/user.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { onAuthStateChangedListener } from '../components/utils/firebase/firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nexport const UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    /**\n     * whenever we are going to call this listener \n     * then this callback function is goung to \n     */\n    const unsubscribe = onAuthStateChangedListener(user => {\n      /**\n       * it is just saying whenever the auth changes log this user\n       */\n      console.log(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }, this);\n};\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangedListener","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentUser","UserProvider","_ref","_s","children","value","unsubscribe","user","console","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/purvi/Desktop/react/react-code3/monster-rolodex/src/context/user.context.jsx"],"sourcesContent":["import {createContext,\n        useState,\n        useEffect} from 'react'\n\nimport { onAuthStateChangedListener } from '../components/utils/firebase/firebase.utils';\n\nexport const UserContext = createContext({\n    currentUser: null,\n    setCurrentUser: () => null,\n});\nexport const UserProvider = ({children}) => {\n   const [currentUser, setCurrentUser] = useState(null);\n   const value = {currentUser, setCurrentUser};  \n   \n   useEffect(()=>{\n    \n    /**\n     * whenever we are going to call this listener \n     * then this callback function is goung to \n     */\n    const unsubscribe =onAuthStateChangedListener((user)=>{\n      /**\n       * it is just saying whenever the auth changes log this user\n       */\n      console.log(user);\n    })\n\n    return unsubscribe; \n   },[])\n\n   return <UserContext.Provider value= {value}> {children}</UserContext.Provider>\n} \n"],"mappings":";;AAAA,SAAQA,aAAa,EACbC,QAAQ,EACRC,SAAS,QAAO,OAAO;AAE/B,SAASC,0BAA0B,QAAQ,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC;EACrCO,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM;AAC1B,CAAC,CAAC;AACF,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACH,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMY,KAAK,GAAG;IAACN,WAAW;IAAEC;EAAc,CAAC;EAE3CN,SAAS,CAAC,MAAI;IAEb;AACJ;AACA;AACA;IACI,MAAMY,WAAW,GAAEX,0BAA0B,CAAEY,IAAI,IAAG;MACpD;AACN;AACA;MACMC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOD,WAAW;EACnB,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAOT,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACL,KAAK,EAAGA,KAAM;IAAAD,QAAA,GAAC,GAAC,EAACA,QAAQ;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACjF,CAAC;AAAAX,EAAA,CArBYF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
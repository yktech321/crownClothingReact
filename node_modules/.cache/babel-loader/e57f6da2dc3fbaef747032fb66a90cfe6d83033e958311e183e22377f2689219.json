{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code/monster-rolodex/src/components/card-list/card-list.component.jsx\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CardList extends Component {\n  render() {\n    // setState triggers render\n    // props also trigger render as whenever props change re-render \n    console.log('render from card-list');\n    const {\n      monsters\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      classsName: \"card-list\",\n      children: monsters.map(monster =>\n      /*#__PURE__*/\n      // since we are mapping it is important to include key\n      // <div className=\"card-container\" key={monster.id}>\n      //     {/* <img src=\"https://robohash.org/1?set=set2\" alt={`monster ${monster.name}`} /> */}\n      //     <img src={`https://robohash.org/${monster.id}?set=set2`} alt={`monster ${monster.name}`} />\n      //     <h2>{monster.name}</h2>\n      //     <p>{monster.email}</p>\n      // </div>\n      /* now above we are calling monster.id and monster.name twice\n       * so let's destructure them so we won't face any problem in\n       * case we wanna do any change like we want to change \n       * monster.name to user.name\n      */\n      _jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://robohash.org/${monster.id}?set=set2`,\n          alt: `monster ${monster.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: monster.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: monster.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, monster.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CardList;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","CardList","render","console","log","monsters","props","classsName","children","map","monster","className","src","id","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","email"],"sources":["/home/purvi/Desktop/react/react-code/monster-rolodex/src/components/card-list/card-list.component.jsx"],"sourcesContent":["import { Component } from \"react\";\n\nclass CardList extends Component{    \n    render(){\n        // setState triggers render\n        // props also trigger render as whenever props change re-render \n        console.log('render from card-list');\n        const {monsters} = this.props;\n        return (\n            <div classsName=\"card-list\">\n                {monsters.map((monster) => (\n                    // since we are mapping it is important to include key\n                    // <div className=\"card-container\" key={monster.id}>\n                    //     {/* <img src=\"https://robohash.org/1?set=set2\" alt={`monster ${monster.name}`} /> */}\n                    //     <img src={`https://robohash.org/${monster.id}?set=set2`} alt={`monster ${monster.name}`} />\n                    //     <h2>{monster.name}</h2>\n                    //     <p>{monster.email}</p>\n                    // </div>\n\n                    /* now above we are calling monster.id and monster.name twice\n                     * so let's destructure them so we won't face any problem in\n                     * case we wanna do any change like we want to change \n                     * monster.name to user.name\n                    */\n                    <div className=\"card-container\" key={monster.id}>\n                    {/* <img src=\"https://robohash.org/1?set=set2\" alt={`monster ${monster.name}`} /> */}\n                    <img src={`https://robohash.org/${monster.id}?set=set2`} alt={`monster ${monster.name}`} />\n                    <h2>{monster.name}</h2>\n                    <p>{monster.email}</p>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default CardList;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,SAASH,SAAS;EAC5BI,MAAMA,CAAA,EAAE;IACJ;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAM;MAACC;IAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;IAC7B,oBACIN,OAAA;MAAKO,UAAU,EAAC,WAAW;MAAAC,QAAA,EACtBH,QAAQ,CAACI,GAAG,CAAEC,OAAO;MAAA;MAClB;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;AACpB;AACA;AACA;AACA;MACoBV,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAH,QAAA,gBAE/BR,OAAA;UAAKY,GAAG,EAAG,wBAAuBF,OAAO,CAACG,EAAG,WAAW;UAACC,GAAG,EAAG,WAAUJ,OAAO,CAACK,IAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3FnB,OAAA;UAAAQ,QAAA,EAAKE,OAAO,CAACK;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBnB,OAAA;UAAAQ,QAAA,EAAIE,OAAO,CAACU;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJeT,OAAO,CAACG,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK1C,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ;AAEA,eAAelB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
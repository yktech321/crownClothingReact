{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n    // console.log('1');\n  }\n\n  componentDidMount() {\n    // console.log('3'); \n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      this.setState(() => {\n        return {\n          monsters: users\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    });\n  }\n  render() {\n    // console.log('2');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          // console.log(event);                           syntheticBaseEvent; in it's target value will come the text we have entered in the search box in this property their is '_reactName: onChange' which suggest that this is a react event \n          const filteredMonster = this.state.monsters.filter(monster => {\n            return monster.includes(event.target.value);\n          });\n          console.log(filteredMonster);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","console","log","render","className","children","type","placeholder","onChange","event","filteredMonster","filter","monster","includes","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","name","id"],"sources":["/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n \nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n    // console.log('1');\n  }\n\n  componentDidMount(){\n    // console.log('3'); \n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users)=>{\n      this.setState(\n        () =>{\n          return {monsters: users}\n        },\n        () => {\n          console.log(this.state)\n        }\n      )\n    })\n  }\n\n  render() {\n    // console.log('2');\n    return (\n      <div className=\"App\">\n        {/* these tags like input,div,h1 may look like a html tag but these are all defined in the react components  */}\n        <input className=\"search-box\" type=\"search\" placeholder=\"search monsters\" onChange={(event)=>{\n          // console.log(event);                           syntheticBaseEvent; in it's target value will come the text we have entered in the search box in this property their is '_reactName: onChange' which suggest that this is a react event \n          const filteredMonster = this.state.monsters.filter((monster) => {\n              return monster.includes(event.target.value)\n            })\n            console.log(filteredMonster);\n        }}/>\n        {\n          this.state.monsters.map((monster)=>{\n           return(\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n           )\n          })\n        }\n       </div>\n    );\n  }\n\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;IACD;EACF;;EAEAC,iBAAiBA,CAAA,EAAE;IACjB;IACAC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAG;MACb,IAAI,CAACC,QAAQ,CACX,MAAK;QACH,OAAO;UAACP,QAAQ,EAAEM;QAAK,CAAC;MAC1B,CAAC,EACD,MAAM;QACJE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAAC;MACzB,CACF,CAAC;IACH,CAAC,CAAC;EACJ;EAEAW,MAAMA,CAAA,EAAG;IACP;IACA,oBACEd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAElBhB,OAAA;QAAOe,SAAS,EAAC,YAAY;QAACE,IAAI,EAAC,QAAQ;QAACC,WAAW,EAAC,iBAAiB;QAACC,QAAQ,EAAGC,KAAK,IAAG;UAC3F;UACA,MAAMC,eAAe,GAAG,IAAI,CAAClB,KAAK,CAACC,QAAQ,CAACkB,MAAM,CAAEC,OAAO,IAAK;YAC5D,OAAOA,OAAO,CAACC,QAAQ,CAACJ,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;UAC7C,CAAC,CAAC;UACFd,OAAO,CAACC,GAAG,CAACQ,eAAe,CAAC;QAChC;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAEF,IAAI,CAAC3B,KAAK,CAACC,QAAQ,CAAC2B,GAAG,CAAER,OAAO,IAAG;QAClC,oBACCvB,OAAA;UAAAgB,QAAA,eACEhB,OAAA;YAAAgB,QAAA,EAAKO,OAAO,CAACS;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GADfP,OAAO,CAACU,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CAAC;MAER,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAEX;AAEF;AAEA,eAAe7B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
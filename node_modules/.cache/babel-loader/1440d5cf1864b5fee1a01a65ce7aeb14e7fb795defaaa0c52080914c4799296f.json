{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.onSearchChange = event => {\n      console.log({\n        startingArray: this.state.monsters\n      });\n      const searchField = event.target.value.toLowerCase();\n      this.setState(searchField);\n    };\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => {\n      this.setState(() => {\n        return {\n          monsters: users\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    });\n  }\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const {\n      onSearchChange\n    } = this;\n    const filteredMonster = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    /**card-list */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), filteredMonster.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","CardList","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","console","log","startingArray","state","monsters","searchField","target","value","toLowerCase","setState","componentDidMount","fetch","then","response","json","users","render","filteredMonster","filter","monster","name","includes","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id"],"sources":["/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState(\n          () => {\n            return { monsters: users };\n          },\n          () => {\n            console.log(this.state);\n          }\n        );\n      });\n  }\n\n  onSearchChange = (event) => {\n    console.log({ startingArray: this.state.monsters });\n    const searchField = event.target.value.toLowerCase();\n    this.setState(searchField);\n  }\n\n  \n  render() {\n    \n      const { monsters,searchField } = this.state;\n      const{ onSearchChange } =this;\n\n\n    const filteredMonster = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField); \n    });\n    \n  /**card-list */\n    return (\n      <div className=\"App\">\n        \n        <input\n          className=\"search-box\"\n          type=\"search\"\n          placeholder=\"search monsters\"\n          onChange={onSearchChange}\n        />\n        {/* now we can name properties anything and we are going to pass them over here */}\n      {/* <CardList monsters={'I am a monster'}/> */}\n      {filteredMonster.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n              );\n        })}\n      </div>\n    );\n  }\n}\nexport default App;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAC1BK,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAsBVC,cAAc,GAAIC,KAAK,IAAK;MAC1BC,OAAO,CAACC,GAAG,CAAC;QAAEC,aAAa,EAAE,IAAI,CAACC,KAAK,CAACC;MAAS,CAAC,CAAC;MACnD,MAAMC,WAAW,GAAGN,KAAK,CAACO,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;MACpD,IAAI,CAACC,QAAQ,CAACJ,WAAW,CAAC;IAC5B,CAAC;IAzBC,IAAI,CAACF,KAAK,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE;IACf,CAAC;EACH;EAEAK,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK;MACf,IAAI,CAACN,QAAQ,CACX,MAAM;QACJ,OAAO;UAAEL,QAAQ,EAAEW;QAAM,CAAC;MAC5B,CAAC,EACD,MAAM;QACJf,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,KAAK,CAAC;MACzB,CACF,CAAC;IACH,CAAC,CAAC;EACN;EASAa,MAAMA,CAAA,EAAG;IAEL,MAAM;MAAEZ,QAAQ;MAACC;IAAY,CAAC,GAAG,IAAI,CAACF,KAAK;IAC3C,MAAK;MAAEL;IAAe,CAAC,GAAE,IAAI;IAG/B,MAAMmB,eAAe,GAAGb,QAAQ,CAACc,MAAM,CAAEC,OAAO,IAAK;MACnD,OAAOA,OAAO,CAACC,IAAI,CAACZ,WAAW,CAAC,CAAC,CAACa,QAAQ,CAAChB,WAAW,CAAC;IACzD,CAAC,CAAC;;IAEJ;IACE,oBACEV,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAElB5B,OAAA;QACE2B,SAAS,EAAC,YAAY;QACtBE,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ,EAAE5B;MAAe;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,EAGHb,eAAe,CAACc,GAAG,CAAEZ,OAAO,IAAK;QAC9B,oBACExB,OAAA;UAAA4B,QAAA,eACE5B,OAAA;YAAA4B,QAAA,EAAKJ,OAAO,CAACC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GADfX,OAAO,CAACa,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AACA,eAAelC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
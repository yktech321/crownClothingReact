{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n    // console.log('1');\n  }\n\n  componentDidMount() {\n    // console.log('3');\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => {\n      this.setState(() => {\n        return {\n          monsters: users\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    });\n  }\n  render() {\n    // console.log('2');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          // console.log(event);                           syntheticBaseEvent; in it's target value will come the text we have entered in the search box in this property their is '_reactName: onChange' which suggest that this is a react event\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            children: users.filter(name => name.includes(\"event.target.value\")).map(filteredName => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: filteredName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","console","log","render","className","children","type","placeholder","onChange","event","filter","name","includes","map","filteredName","fileName","_jsxFileName","lineNumber","columnNumber","monster","id"],"sources":["/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n    };\n    // console.log('1');\n  }\n\n  componentDidMount() {\n    // console.log('3');\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState(\n          () => {\n            return { monsters: users };\n          },\n          () => {\n            console.log(this.state);\n          }\n        );\n      });\n  }\n\n  render() {\n    // console.log('2');\n    return (\n      <div className=\"App\">\n        {/* these tags like input,div,h1 may look like a html tag but these are all defined in the react components  */}\n        <input\n          className=\"search-box\"\n          type=\"search\"\n          placeholder=\"search monsters\"\n          onChange={(event) => {\n            // console.log(event);                           syntheticBaseEvent; in it's target value will come the text we have entered in the search box in this property their is '_reactName: onChange' which suggest that this is a react event\n            <div>\n              {users.filter((name) => name.includes(\"event.target.value\"))\n                .map((filteredName) => (\n                  <li>{filteredName}</li>\n                ))}\n            </div>;\n          }}\n        />\n        {this.state.monsters.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;IACD;EACF;;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACAC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK;MACf,IAAI,CAACC,QAAQ,CACX,MAAM;QACJ,OAAO;UAAEP,QAAQ,EAAEM;QAAM,CAAC;MAC5B,CAAC,EACD,MAAM;QACJE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAAC;MACzB,CACF,CAAC;IACH,CAAC,CAAC;EACN;EAEAW,MAAMA,CAAA,EAAG;IACP;IACA,oBACEd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAElBhB,OAAA;QACEe,SAAS,EAAC,YAAY;QACtBE,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ,EAAGC,KAAK,IAAK;UACnB;UACA,aAAApB,OAAA;YAAAgB,QAAA,EACGN,KAAK,CAACW,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CACzDC,GAAG,CAAEC,YAAY,iBAChBzB,OAAA;cAAAgB,QAAA,EAAKS;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QACR;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACD,IAAI,CAAC1B,KAAK,CAACC,QAAQ,CAACoB,GAAG,CAAEM,OAAO,IAAK;QACpC,oBACE9B,OAAA;UAAAgB,QAAA,eACEhB,OAAA;YAAAgB,QAAA,EAAKc,OAAO,CAACR;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GADfC,OAAO,CAACC,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
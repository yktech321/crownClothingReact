{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js\";\nimport { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster1: {\n        name: 'Linda'\n      },\n      monster2: {\n        name: 'Frank'\n      },\n      monster: {\n        name: 'Linda'\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n/**\n * ReactDOM.render(\n *  <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    document.getElementById(('root')\n * ) \n * now ReactDOM is going to render whatever is their in the 'App' component until the point it gets id root as in index.html \n * so above whatever is written in between the render that's going to be deplpyed by the react \n * therefore, basically this app component represent the entire application\n\n */","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","App","constructor","state","monster1","name","monster2","monster","render","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/purvi/Desktop/react/react-code/monster-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n \nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster1: {\n        name: 'Linda'\n      },\n      monster2: {\n        name: 'Frank'\n      },\n      monster:{\n        name: 'Linda'\n      }\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n \n/**\n * ReactDOM.render(\n *  <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    document.getElementById(('root')\n * ) \n * now ReactDOM is going to render whatever is their in the 'App' component until the point it gets id root as in index.html \n * so above whatever is written in between the render that's going to be deplpyed by the react \n * therefore, basically this app component represent the entire application\n\n */"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;QACRC,IAAI,EAAE;MACR,CAAC;MACDC,QAAQ,EAAE;QACRD,IAAI,EAAE;MACR,CAAC;MACDE,OAAO,EAAC;QACNF,IAAI,EAAE;MACR;IACF,CAAC;EACH;EACAG,MAAMA,CAAA,EAAG;IACP,oBACER,OAAA;MAAKS,SAAS,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CAAC;EAEV;AACF;AAEA,eAAeZ,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
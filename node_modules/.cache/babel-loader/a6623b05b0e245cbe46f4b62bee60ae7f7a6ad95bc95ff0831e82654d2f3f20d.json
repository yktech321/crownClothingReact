{"ast":null,"code":"var _jsxFileName = \"/home/purvi/Desktop/react/react-code3/monster-rolodex/src/components/sign-in-form/sign-in-form.component.jsx\",\n  _s = $RefreshSig$();\nimport Button from \"../button/button.component\";\nimport { signInWithGooglePopup, createUserDocumentFromAuth, signInAuthUserWithEmailAndPassword } from \"../utils/firebase/firebase.utils\";\nimport { useState /*useContext*/ } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport './sign-in-form.styles.scss';\n\n// import {UserContext} from '../../context/user.context'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: '',\n  password: ''\n};\nconst SigniInForm = () => {\n  _s();\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n  console.log(formFields);\n\n  /**\n   * removing the setCurrentUser \n   * and also the useContext and UserContext imported above\n   */\n  // const { setCurrentUser } = useContext(UserContext);\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n  const signInWithGoogle = async () => {\n    const {\n      user\n    } = await signInWithGooglePopup();\n    const userDocRef = createUserDocumentFromAuth(user);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // whenever user signs in we want to store it inside our context  \n      const {\n        user\n      } = await signInAuthUserWithEmailAndPassword(email, password);\n      /**\n       * removing the setCurrentUser\n       */\n      //   setCurrentUser(user);\n      resetFormFields();\n    } catch (error) {\n      switch (error.code) {\n        case 'auth/wrong-password':\n          alert('incorrect password for email');\n          break;\n        case 'auth/user-not-found':\n          alert('no user associated with this email');\n          break;\n        default:\n          console.log(error);\n      }\n      console.log(error);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        onChange: handleChange,\n        name: \"email\",\n        value: email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        onChange: handleChange,\n        name: \"password\",\n        value: password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          buttonType: \"google\",\n          onClick: signInWithGoogle,\n          children: \"Google Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(SigniInForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n_c = SigniInForm;\nexport default SigniInForm;\nvar _c;\n$RefreshReg$(_c, \"SigniInForm\");","map":{"version":3,"names":["Button","signInWithGooglePopup","createUserDocumentFromAuth","signInAuthUserWithEmailAndPassword","useState","FormInput","jsxDEV","_jsxDEV","defaultFormFields","email","password","SigniInForm","_s","formFields","setFormFields","console","log","resetFormFields","signInWithGoogle","user","userDocRef","handleSubmit","event","preventDefault","error","code","alert","handleChange","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","onChange","required","buttonType","onClick","_c","$RefreshReg$"],"sources":["/home/purvi/Desktop/react/react-code3/monster-rolodex/src/components/sign-in-form/sign-in-form.component.jsx"],"sourcesContent":["\nimport Button from \"../button/button.component\";\nimport { \n    signInWithGooglePopup, \n    createUserDocumentFromAuth,\n    signInAuthUserWithEmailAndPassword } from \"../utils/firebase/firebase.utils\";\n\nimport { useState,/*useContext*/  } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport './sign-in-form.styles.scss'\n\n// import {UserContext} from '../../context/user.context'\nconst defaultFormFields = {\n    email: '',\n    password: '',\n}\n\nconst SigniInForm = () => {\n    const[formFields, setFormFields] = useState(defaultFormFields);\n    const {email, password} = formFields;\n    \n    console.log(formFields);\n\n    /**\n     * removing the setCurrentUser \n     * and also the useContext and UserContext imported above\n     */\n    // const { setCurrentUser } = useContext(UserContext);\n\n    const resetFormFields = () => {\n        setFormFields (defaultFormFields);\n    }\n  \n    const signInWithGoogle = async ()=>{\n        const {user} = await signInWithGooglePopup();\n        const userDocRef = createUserDocumentFromAuth(user);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n    \n     \n        try {\n            // whenever user signs in we want to store it inside our context  \n          const {user} = await signInAuthUserWithEmailAndPassword(\n            email,\n            password\n          )\n          /**\n           * removing the setCurrentUser\n           */\n        //   setCurrentUser(user);\n          resetFormFields();\n        } catch (error) {\n            switch(error.code){\n                case 'auth/wrong-password':\n                    alert('incorrect password for email');\n                    break;\n                case 'auth/user-not-found':\n                        alert('no user associated with this email');\n                        break; \n                default:\n                    console.log(error);\n            }\n            console.log(error);\n        }\n      };\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setFormFields({...formFields, [name]:value});\n    }\n    return(\n        <div className=\"sign-in-container\">\n            <h2>Already have an account?</h2>\n            <h1> Sign in with your email and password</h1>\n            <form onSubmit= {handleSubmit}>\n                <FormInput \n                 label='Email'\n                 type=\"email\" \n                 onChange={handleChange} \n                 name=\"email\" value={email} \n                 required \n                 />\n                <FormInput \n                 label='Password'\n                 type=\"password\" \n                 onChange={handleChange} \n                 name=\"password\" \n                 value={password} \n                 required \n                 />\n                 <div className=\"buttons-container\">\n                <Button type=\"submit\">Sign In</Button>\n                <Button type='button' buttonType='google' onClick= {signInWithGoogle}>Google Sign In</Button>\n                 </div>\n            </form> \n        </div>\n    ) \n}\n\nexport default SigniInForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}